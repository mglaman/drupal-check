#!/usr/bin/env php
<?php

if (PHP_VERSION_ID < 70100) {
    printf("This tool requires at least PHP 7.1. You currently have %s installed. Please upgrade your PHP version.\n", PHP_VERSION);
    exit(1);
}

use Composer\XdebugHandler\XdebugHandler;

gc_disable();

if (file_exists(__DIR__ . '/vendor/autoload.php')) {
    require __DIR__ . '/vendor/autoload.php';
} elseif (is_file(__DIR__ . '/../../autoload.php')) {
    require_once __DIR__ . '/../../autoload.php';
}
else {
    echo "Composer autoload file not found.\n";
    echo "You need to run 'composer install'.\n";
    exit(1);
}

$xdebug = new XdebugHandler('cua', '--ansi');
$xdebug->check();
unset($xdebug);

// Bump memory limit
// @see https://github.com/composer/composer/blob/master/bin/composer#L21
if (function_exists('ini_set')) {
    @ini_set('display_errors', 1);
    $memoryInBytes = function ($value) {
        $unit = strtolower(substr($value, -1, 1));
        $value = (int) $value;
        switch($unit) {
            case 'g':
                $value *= 1024;
                // no break (cumulative multiplier)
            case 'm':
                $value *= 1024;
                // no break (cumulative multiplier)
            case 'k':
                $value *= 1024;
        }
        return $value;
    };
    $memoryLimit = trim(ini_get('memory_limit'));
    // Increase memory_limit if it is lower than 1.5GB
    if ($memoryLimit != -1 && $memoryInBytes($memoryLimit) < 1024 * 1024 * 1536) {
        @ini_set('memory_limit', '1536M');
    }
    // Set user defined memory limit
    if ($memoryLimit = getenv('COMPOSER_MEMORY_LIMIT')) {
        @ini_set('memory_limit', $memoryLimit);
    }
    unset($memoryInBytes, $memoryLimit);
}

putenv('DRUPAL_CHECK_BINARY='.realpath($_SERVER['argv'][0]));

(new \DrupalCheck\Application())->run();
